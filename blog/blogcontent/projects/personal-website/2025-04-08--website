<h1>The story behind this website</h1>
<p>2025/04/08</p>

<p>
I've always wanted a custom website. Being a programmer it just feels right to have one. I can have a central place to organise all my projects and whatever other content I produce. 
</p>

<p>
In my head my site would be a place to display all my projects and then have a more informal blog running alongside it where I can post information about incomplete projects or just other things unrelated to programming.
</p>

<p>
But I've always had an issue. Growing up I didn't really have a way to buy a domain or web hosting. My parents didn't like the idea of me forking over Â£5/month to some random service they've never heard of. So a lot of my projects were focused around static content that I could host on Github Pages (or, in networking related projects, putting a greater emphasis on peer-to-peer).
</p>

<p>
One day I had a simple idea. I could use the Github repo as the server. My blog posts could just be a file that I push to master. Then, using Javascript fetch I could format it into a list of posts organised by the folders the posts were in.
</p>

<p>
So, during the start of the summer holidays in 2023 I decided to write my ideal website using this "Github as a database" idea. I made the project in React. It was my first "big" project using that framework and I found the process to be frustrating. 
</p>

<p>
In my head a blog wasn't <em>that</em> complicated, especially in the way that I had to build it.
</p>

<p>
I scrapped the idea and made the repo private. It worked, I just didn't like it.
</p>

<p>
Fast forward to current day and I decided that I wanted a website again. We were covering web development in university and I liked the simplicity of just HTML+CSS+JS. Then I had another idea...
</p>

<p>
If I use HTMX, I can store templates on Github too..
</p>

<p>
This meant that I could write a navbar, store it in its own file, then use HTMX to "get" the component.
</p>

<p>
I wrote it out and it wasn't super clean (it makes the HTML feel more like a traditional programming language). But it did work.
</p>

<p>
By tacking some CSS and Javascript onto this idea - and using the same basic format for each page - I made it look a bit more presentable. 
</p>

<p>
The idea behind fetching the blog posts is a little more complicated now. 
</p>

<p>
The "post list" is handled purely by one big ugly block of Javascript. It uses fetch and recursively searches the JSON response - putting details tags for directories and links for posts. In other words, it's a depth-first search where leaves are links and branches are details tags.
</p>

<p>
The actual post itself utilises the URL parameter property in a similar way to a slug/dyanimc URL. It directs you to somewhere in ./src/blog/blogcontent/[POST] which will be HTML. HTMX then just drops this response into the page directly.
</p>

<p>
Some ease of use has been lost in the process. I used to be able to write posts in markdown and have a library parse that for me. Now, I have to write HTML for each post - which gives me more control but makes it less friendly to look at.
</p>

<p>
Overall this has been a pretty fun weekend project!
</p>

<p>
When I was younger I was much more eager to be "out there" with the blog. My idea was a place where I could talk about software development, hardware development, my personal hobbies, etc. etc.
</p>

<p>
I now view my ideal use of a website much differently. It's a place where people can find information on how to contact me and to get an overview on the projects I have made in a format that allows me to express myself more than Github allows.
</p>

<p>
So this blog is semi-redundant already. My current plan, if I even use it that often, is for it to be a second portfolio. One to showcase projects that are either too small, experimental or failed/retired ideas.
</p>

<p>
I might also put other things up regarding my hobbies if I make projects that link in with them.
</p>

<p>Anyways, that's the story of this website. Thank you for reading.</p>
